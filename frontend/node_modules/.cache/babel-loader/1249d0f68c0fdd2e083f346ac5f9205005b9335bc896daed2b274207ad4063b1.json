{"ast":null,"code":"const BASE_URL = 'http://localhost:5001/api/traps';\nexport const trapApi = {\n  getAllTraps: async () => {\n    const response = await fetch(BASE_URL);\n    return response.json();\n  },\n  createTrap: async trapData => {\n    const response = await fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trapData)\n    });\n    return response.json();\n  },\n  updateTrapByQR: async (qrCode, updates) => {\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updates)\n    });\n    return response.json();\n  },\n  updateTrap: async (id, updateData) => {\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        // แก้ path ให้ตรงกับ backend\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update trap');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating trap:', error);\n      throw error;\n    }\n  },\n  deleteTrap: async id => {\n    try {\n      const response = await fetch(`${BASE_URL}/traps/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to delete trap');\n      }\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Error deleting trap:', error);\n      throw error;\n    }\n  },\n  getTrapByQR: async qrCode => {\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`);\n    return response.json();\n  }\n};","map":{"version":3,"names":["BASE_URL","trapApi","getAllTraps","response","fetch","json","createTrap","trapData","method","headers","body","JSON","stringify","updateTrapByQR","qrCode","updates","updateTrap","id","updateData","ok","Error","error","console","deleteTrap","message","result","getTrapByQR"],"sources":["C:/Project1/trap-monitor/frontend/src/api/trapApi.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5001/api/traps';\r\n\r\nexport const trapApi = {\r\n  getAllTraps: async () => {\r\n    const response = await fetch(BASE_URL);\r\n    return response.json();\r\n  },\r\n\r\n  createTrap: async (trapData) => {\r\n    const response = await fetch(BASE_URL, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(trapData)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  updateTrapByQR: async (qrCode, updates) => {\r\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updates)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\nupdateTrap: async (id, updateData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${id}`, {  // แก้ path ให้ตรงกับ backend\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update trap');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error updating trap:', error);\r\n    throw error;\r\n  }\r\n},\r\n\r\n  deleteTrap: async (id) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/traps/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Failed to delete trap');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error deleting trap:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getTrapByQR: async (qrCode) => {\r\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`);\r\n    return response.json();\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,OAAO,GAAG;EACrBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,CAAC;IACtC,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDC,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,EAAE;MACrCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IAC/B,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDQ,cAAc,EAAE,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;IACzC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,OAAOc,MAAM,EAAE,EAAE;MACvDN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,OAAO;IAC9B,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEHW,UAAU,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACpC,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,IAAIiB,EAAE,EAAE,EAAE;QAAG;QACnDT,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,OAAO,MAAMjB,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAECE,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAUiB,EAAE,EAAE,EAAE;QACtDT,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACN,QAAQ,CAACgB,EAAE,EAAE;QAChB,MAAME,KAAK,GAAG,MAAMlB,QAAQ,CAACE,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIe,KAAK,CAACC,KAAK,CAACG,OAAO,IAAI,uBAAuB,CAAC;MAC3D;MAEA,MAAMC,MAAM,GAAG,MAAMtB,QAAQ,CAACE,IAAI,CAAC,CAAC;MACpC,OAAOoB,MAAM;IACf,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDK,WAAW,EAAE,MAAOZ,MAAM,IAAK;IAC7B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,OAAOc,MAAM,EAAE,CAAC;IACxD,OAAOX,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}