{"ast":null,"code":"const BASE_URL = 'http://localhost:5001/api/traps';\nexport const trapApi = {\n  getAllTraps: async () => {\n    const response = await fetch(BASE_URL);\n    return response.json();\n  },\n  createTrap: async trapData => {\n    const response = await fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trapData)\n    });\n    return response.json();\n  },\n  updateTrapByQR: async (qrCode, updates) => {\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updates)\n    });\n    return response.json();\n  },\n  deleteTrap: async id => {\n    const response = await fetch(`${BASE_URL}/${id}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  },\n  getTrapByQR: async qrCode => {\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`);\n    return response.json();\n  }\n};","map":{"version":3,"names":["BASE_URL","trapApi","getAllTraps","response","fetch","json","createTrap","trapData","method","headers","body","JSON","stringify","updateTrapByQR","qrCode","updates","deleteTrap","id","getTrapByQR"],"sources":["C:/Project1/trap-monitor/frontend/src/api/trapApi.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5001/api/traps';\r\n\r\nexport const trapApi = {\r\n  getAllTraps: async () => {\r\n    const response = await fetch(BASE_URL);\r\n    return response.json();\r\n  },\r\n\r\n  createTrap: async (trapData) => {\r\n    const response = await fetch(BASE_URL, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(trapData)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  updateTrapByQR: async (qrCode, updates) => {\r\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updates)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  deleteTrap: async (id) => {\r\n    const response = await fetch(`${BASE_URL}/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  getTrapByQR: async (qrCode) => {\r\n    const response = await fetch(`${BASE_URL}/qr/${qrCode}`);\r\n    return response.json();\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,OAAO,GAAG;EACrBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,CAAC;IACtC,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDC,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,EAAE;MACrCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IAC/B,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDQ,cAAc,EAAE,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;IACzC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,OAAOc,MAAM,EAAE,EAAE;MACvDN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,OAAO;IAC9B,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDW,UAAU,EAAE,MAAOC,EAAE,IAAK;IACxB,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,IAAIiB,EAAE,EAAE,EAAE;MAChDT,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDa,WAAW,EAAE,MAAOJ,MAAM,IAAK;IAC7B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,OAAOc,MAAM,EAAE,CAAC;IACxD,OAAOX,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}